{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    password1: \"\",\n    phone: \"\",\n    Address: \"\",\n    ps: \"\",\n    city: \"\",\n    pro: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //handling errors\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    } //call the callback\n\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/sheik/Desktop/caps/capstone/src/components/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","email","password","password1","phone","Address","ps","city","pro","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAC,EAApC;AAAwCC,IAAAA,KAAK,EAAC,EAA9C;AAAkDC,IAAAA,OAAO,EAAC,EAA1D;AAA8DC,IAAAA,EAAE,EAAC,EAAjE;AAAqEC,IAAAA,IAAI,EAAC,EAA1E;AAA8EC,IAAAA,GAAG,EAAC;AAAlF,GAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMmB,YAAY,GAAGC,KAAK,IAAG;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACAjB,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACe,KAAK,CAACG,MAAN,CAAaF,IAAd,GAAqBD,KAAK,CAACG,MAAN,CAAaD;AAF5B,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACK,cAAN,GAD0B,CAE1B;;AACAT,IAAAA,SAAS,CAACZ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAa,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAqD;AACjDd,MAAAA,QAAQ;AACX,KAHW,CAIZ;;AACH,GALQ,EAKN,CAACY,MAAD,CALM,CAAT;AAOA,SAAM;AACFI,IAAAA,YADE;AAEFK,IAAAA,YAFE;AAGFnB,IAAAA,MAHE;AAIFU,IAAAA;AAJE,GAAN;AAMH,CAlCD;;AAoCA,eAAeb,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n    const [values, setValues] = useState({email: \"\", password: \"\", password1:\"\", phone:\"\", Address:\"\", ps:\"\", city:\"\", pro:\"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = event =>{\r\n        const {name, value} = event.target;\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        //handling errors\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting){\r\n            callback();\r\n        }\r\n        //call the callback\r\n    }, [errors]);\r\n\r\n    return{\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors\r\n    };\r\n};\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}